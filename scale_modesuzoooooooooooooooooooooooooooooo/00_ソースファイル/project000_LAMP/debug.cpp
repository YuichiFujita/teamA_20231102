//============================================================
//
//	デバッグ処理 [debug.cpp]
//	Author：藤田勇一
//
//============================================================
#ifdef _DEBUG	// デバッグ処理
//************************************************************
//	インクルードファイル
//************************************************************
#include "debug.h"

//************************************************************
//	マクロ定義
//************************************************************
#define MEASURE_FPS	(500)	// FPSの計測タイミング

//************************************************************
//	親クラス [CDebug] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CDebug::CDebug()
{
	// メンバ変数をクリア
	m_nFps			= 0;	// FPSカウンタ
	m_dwFrameCount	= 0;	// フレームカウント
	m_dwFPSLastTime	= 0;	// 最後にFPSを計測した時刻
}

//============================================================
//	デストラクタ
//============================================================
CDebug::~CDebug()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CDebug::Init(void)
{
	// メンバ変数を初期化
	m_nFps			= 0;	// FPSカウンタ
	m_dwFrameCount	= 0;	// フレームカウント

	// メンバ変数を設定
	m_dwFPSLastTime	= timeGetTime();	// 現在時刻を取得

	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
void CDebug::Uninit(void)
{

}

//============================================================
//	FPS測定処理
//============================================================
void CDebug::MeasureFps(const DWORD dwCurrentTime)
{
	if ((dwCurrentTime - m_dwFPSLastTime) >= MEASURE_FPS)
	{ // 0.5秒経過

		// FPSを計測
		m_nFps = (m_dwFrameCount * 1000) / (dwCurrentTime - m_dwFPSLastTime);

		// FPSを測定した時刻を保存
		m_dwFPSLastTime = dwCurrentTime;

		// フレームカウントをクリア
		m_dwFrameCount = 0;
	}
}

//============================================================
//	フレームカウント加算処理
//============================================================
void CDebug::AddFrameCount(void)
{
	// フレームカウントを加算
	m_dwFrameCount++;
}

//============================================================
//	FPS取得処理
//============================================================
int CDebug::GetFps(void) const
{
	// FPSを返す
	return m_nFps;
}

//============================================================
//	生成処理
//============================================================
CDebug *CDebug::Create(void)
{
	// ポインタを宣言
	CDebug *pDebug = NULL;	// デバッグ生成用

	if (pDebug == NULL)
	{ // 使用されていない場合

		// メモリを確保
		pDebug = new CDebug;	// デバッグ
	}
	else { assert(false); return NULL; }	// 使用中

	if (pDebug != NULL)
	{ // 確保に成功している場合

		// デバッグの初期化
		if (FAILED(pDebug->Init()))
		{ // 初期化に失敗した場合

			// メモリ開放
			delete pDebug;
			pDebug = NULL;

			// 失敗を返す
			return NULL;
		}

		// 確保したアドレスを返す
		return pDebug;
	}
	else { assert(false); return NULL; }	// 確保失敗
}

//============================================================
//	破棄処理
//============================================================
HRESULT CDebug::Release(CDebug *&prDebug)
{
	if (prDebug != NULL)
	{ // 使用中の場合

		// デバッグの終了
		prDebug->Uninit();

		// メモリ開放
		delete prDebug;
		prDebug = NULL;

		// 成功を返す
		return S_OK;
	}
	else { assert(false); return E_FAIL; }	// 非使用中
}

#endif	// _DEBUG
